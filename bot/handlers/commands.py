# import os
#
# from telegram import Update
# from telegram.ext import CommandHandler, ContextTypes
# from telegram import InlineKeyboardButton, InlineKeyboardMarkup
# from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
# from telegram import Update, Bot
# from dotenv import load_dotenv
#
# GROUP = os.getenv("TELEGRAM_GROUP")
#
#
# async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     args = context.args
#     if args and args[0].startswith('ref_'):
#         referrer_id = args[0][4:]  # ID –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ
#         await track_referral(update, referrer_id)
#
#
# async def track_referral(update: Update, referrer_id: str):
#     user_id = update.effective_user.id
#     channel_id = "@your_channel"  # –í–∞—à –∫–∞–Ω–∞–ª
#
#     # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
#     try:
#         member = await context.bot.get_chat_member(channel_id, user_id)
#         if member.status in ["member", "administrator", "creator"]:
#             await update.message.reply_text(
#                 "‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã! –°–ø–∞—Å–∏–±–æ!\n"
#                 f"–ü—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏–π: ID {referrer_id}"
#             )
#             # –ó–∞–ø–∏—Å—å –≤ –ë–î (–ø—Ä–∏–º–µ—Ä –¥–ª—è SQLite)
#             save_referral(user_id, referrer_id)
#     except Exception as e:
#         print(f"–û—à–∏–±–∫–∞: {e}")
#
#     await update.message.reply_text(
#         "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã.\n"
#         "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
#         "/warn - –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
#         "/ban - –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
#         "/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥—Ä—É–ø–ø—ã"
#     )
#
#
# async def greet_new_members(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
#     for member in update.message.new_chat_members:
#         await update.message.reply_text(
#             f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {member.mention_markdown()}!\n"
#             "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –≥—Ä—É–ø–ø—ã."
#         )
#
#
# async def generate_referral_link(update: Update, context):
#     user_id = update.effective_user.id
#     ref_link = f"https://t.me/{GROUP}?start=ref_{user_id}"
#
#     keyboard = [
#         [InlineKeyboardButton("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π", url=f"tg://msg_url?url={ref_link}&text=–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è!")]
#     ]
#
#     await update.message.reply_text(
#         f"–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n`{ref_link}`\n\n"
#         "–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 100 –±–∞–ª–ª–æ–≤!",
#         reply_markup=InlineKeyboardMarkup(keyboard),
#         parse_mode="Markdown"
#     )
#
#     async def process_referral(referrer_id: int, new_user_id: int):
#         # –ó–¥–µ—Å—å –ª–æ–≥–∏–∫–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–æ–Ω—É—Å–æ–≤
#         # –ü—Ä–∏–º–µ—Ä —Å SQLite –±–∞–∑–æ–π:
#         # import sqlite3
#         # conn = sqlite3.connect('bot.db')
#         # cursor = conn.cursor()
#
#         # # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ —Ä–µ—Ñ–µ—Ä–∞–ª–µ
#         # cursor.execute(
#         #     "INSERT OR IGNORE INTO referrals (referrer_id, referral_id) VALUES (?, ?)",
#         #     (referrer_id, new_user_id)
#         # )
#         #
#         # # –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å—ã
#         # cursor.execute(
#         #     "UPDATE users SET balance = balance + 100 WHERE user_id = ?",
#         #     (referrer_id,)
#         # )
#
#         # conn.commit()
#         # conn.close()
#
#         # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ
#         await context.bot.send_message(
#             chat_id=referrer_id,
#             text="üéâ –ü–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å! +100 –±–∞–ª–ª–æ–≤!"
#         )
#
#
# def setup_handlers():
#     return [
#         CommandHandler("start", start),
#         CommandHandler("referral", generate_referral_link),
#     ]
